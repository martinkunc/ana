@page "/weather"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (anaGroups == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var agroup in anaGroups)
            {
                <tr>
                    <td>@agroup.Id</td>
                    <td>@agroup.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    [Inject]
    private IApiClient apiClient { get; set; }

    private List<AnaGroup> anaGroups;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Console.WriteLine($"User is authenticated: {string.Join(",",authState.User.Claims.Select(c => $"{c.Type}={c.Value}"))}");
        var userId = authState.User.Claims.FirstOrDefault( c => c.Type == "sub")?.Value ?? throw new InvalidOperationException("User ID not found in claims.");

        anaGroups = await apiClient.GetGroupsAsync(userId);
    }

}
